#!/usr/bin/env node
var chainProcessStdio, commandPipeline, spawn, splitArrayByElement, splitArrayByIndex;

spawn = require('child_process').spawn;

splitArrayByIndex = function(index, arr) {
  return {
    left: arr.slice(0, +(index - 1) + 1 || 9e9),
    right: arr.slice(index + 1)
  };
};

splitArrayByElement = function(el, arr) {
  var ind, left, ref, right;
  ind = arr.indexOf(el);
  switch (ind) {
    case -1:
      return [arr];
    default:
      ref = splitArrayByIndex(ind, arr), left = ref.left, right = ref.right;
      return [left].concat(splitArrayByElement(el, right));
  }
};

chainProcessStdio = function(argvs) {
  var curArgv, curProc;
  curArgv = argvs[0];
  curProc = spawn(curArgv[0], curArgv.slice(1));
  curProc.stdout.pipe((function() {
    switch (argvs.length) {
      case 1:
        return process.stdout;
      default:
        return chainProcessStdio(argvs.slice(1));
    }
  })());
  curProc.stderr.pipe(process.stderr);
  curProc.on('exit', function(code) {
    if (code) {
      return process.exit(code);
    }
  });
  return curProc.stdin;
};

commandPipeline = chainProcessStdio(splitArrayByElement('|', process.argv.slice(2)));

if (process.env.LISTEN) {
  process.stdin.pipe(commandPipeline);
}
